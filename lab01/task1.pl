% Предикат для вычисления длины списка
length([],0).
length([_|Y],N):-length(Y,N1), N is N1+1.

% Пример:
% ?- length([a,b,c,d],N),write(N).
% Вывод: 4

% Предикат для проверки, является ли элемент членом списка
member(A,[A|_]).
member(A,[_|Z]):-member(A,Z).

% Пример:
% ?- member(X,[a,b,c]),write(X).
% Вывод: a (и другие решения: b, c)

% Предикат для объединения двух списков
append([],X,X).
append([A|X],Y,[A|Z]):-append(X,Y,Z).

% Пример:
% ?- append([1,2,3],T,[1,2,3,4,5,6]),write(T).
% Вывод: [4,5,6]

% Предикат для удаления первого вхождения элемента из списка
remove(X,[X|T],T).
remove(X,[Y|T],[Y|T1]):-remove(X,T,T1).

% Пример:
% ?- remove(b,[r,b,c],R),write(R).
% Вывод: [r,c]

% Предикат для генерации всех перестановок списка
permute([],[]).
permute(L,[X|T]):-remove(X,L,R),permute(R,T).

% Пример:
% ?- permute([a,b,c,d],L),write(L).
% Вывод: [a,b,c,d] (и другие перестановки)

% Предикат для проверки, является ли список S подсписком списка L
sublist(S,L):-append(_,L1,L),append(S,_,L1).

% Пример:
% ?- sublist([b,c],[a,b,c,d]).
% Вывод: true

% Предикат для получения N-го элемента списка
function(1, [X|_], X).
function(N, [_|T], X) :- N1 is N - 1, function(N1, T, X).

% Пример:
% ?- function(5,[a,b,c,d,t,g],X).
% Вывод: t

% Альтернативный предикат для получения N-го элемента списка
function1(N, L, X) :- append(Y, [X|_], L),N1 is N-1,length(Y, N1).

% Пример:
% ?- function1(5,[a,b,c,d,t,g],X).
% Вывод: t

% Предикат для проверки, является ли список геометрической прогрессией
geom([X,Y,Z|T]) :-!, (X*Z) =:= (Y*Y), geom([Y,Z|T]).
geom(_).

% Примеры:
% ?- geom([2,4,8,16,32]).
% Вывод: true
% ?- geom([2,4,8,14,32]).
% Вывод: false

% Альтернативный предикат для проверки, является ли список геометрической прогрессией
geom1([X,Y,Z|T]) :-!, (X*Z) =:= (Y*Y), remove(X, [X,Y,Z|T], R), geom1(R).
geom1(_).

% Примеры:
% ?- geom1([2,4,8,16,32]).
% Вывод: true
% ?- geom1([2,4,8,14,32]).
% Вывод: false